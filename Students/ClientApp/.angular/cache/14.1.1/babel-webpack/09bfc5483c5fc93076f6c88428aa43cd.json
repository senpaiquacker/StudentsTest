{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, ElementRef } from '@angular/core';\nimport { DataService } from './app.dataservice';\nimport { FacultyGroup } from './faculty-group';\nimport { StudentInfo } from './student-info';\nlet StudentComponent = class StudentComponent {\n  constructor(service, elRef) {\n    this.service = service;\n    this.elRef = elRef;\n    this.edited = undefined;\n    this.editedId = undefined;\n    this.mode = Mode.Nothing;\n    this.contentError = false;\n    this.elRef = elRef;\n  }\n\n  ngOnInit() {\n    this.loadStudents();\n  }\n\n  loadStudents() {\n    this.service.GetStudents().subscribe(data => {\n      this.students = data;\n      this.editable = Array.from(this.students, n => false);\n    });\n  }\n\n  addStudent() {\n    this.students.push(new StudentInfo(\"\", \"\", \"\", \"\", new FacultyGroup(null, \"\")));\n    this.selectStudent(this.students.length - 1);\n    this.selectStudent(this.students.length - 1);\n    this.mode = Mode.Create;\n  }\n\n  selectStudent(id) {\n    if (this.mode == Mode.Nothing) {\n      if (this.editedId == id) {\n        this.edit(id);\n      } else {\n        this.editedId = id;\n        this.edited = new StudentInfo(this.students[id].SecondName, this.students[id].name, this.students[id].FatherName, this.students[id].DateOfBirth, this.students[id].group);\n      }\n    }\n  }\n\n  edit(id) {\n    this.editable[id] = true;\n    this.mode = Mode.Edit;\n  }\n\n  save() {\n    if (this.edited.SecondName == \"\" || this.edited.name == \"\" || this.edited.FatherName == \"\" || this.edited.DateOfBirth == \"\" || this.edited.group == undefined || this.edited.group.group == null || this.edited.group.group.toString() == \"\") {\n      this.contentError = true;\n    } else {\n      this.contentError = false;\n      this.students[this.editedId] = this.edited;\n      this.clearSelection();\n    }\n  }\n\n  clearSelection() {\n    this.editable[this.editedId] = false;\n    this.editedId = undefined;\n    this.edited = undefined;\n    this.mode = Mode.Nothing;\n  }\n\n  deleteStudent(id) {\n    if (this.mode == Mode.Create) {\n      this.students.splice(id, 1);\n      this.clearSelection();\n    } else if (this.mode == Mode.Edit) {\n      this.clearSelection();\n    }\n\n    this.students.splice(id, 1);\n    this.contentError = false;\n  }\n\n};\nStudentComponent = __decorate([Component({\n  selector: 'students',\n  templateUrl: './student.component.page.html',\n  providers: [DataService],\n  styleUrls: ['./app.component.style.css']\n}), __metadata(\"design:paramtypes\", [DataService, ElementRef])], StudentComponent);\nexport { StudentComponent };\nvar Mode = /*#__PURE__*/(() => {\n  (function (Mode) {\n    Mode[Mode[\"Nothing\"] = 0] = \"Nothing\";\n    Mode[Mode[\"Edit\"] = 1] = \"Edit\";\n    Mode[Mode[\"Create\"] = 2] = \"Create\";\n  })(Mode || (Mode = {}));\n\n  return Mode;\n})();","map":null,"metadata":{},"sourceType":"module"}