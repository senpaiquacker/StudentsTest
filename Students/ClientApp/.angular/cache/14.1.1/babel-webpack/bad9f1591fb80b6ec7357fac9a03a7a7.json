{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { DataService } from './app.dataservice';\nimport { DOCUMENT } from '@angular/common';\nimport * as global from './utility.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.dataservice\";\nimport * as i2 from \"@angular/forms\";\nexport let FacultyFormComponent = /*#__PURE__*/(() => {\n  class FacultyFormComponent {\n    constructor(document, service, eRef) {\n      this.document = document;\n      this.service = service;\n      this.eRef = eRef;\n      this.code = undefined;\n      this.name = \"\";\n      this.contentError = false;\n    }\n\n    submit() {\n      if (this.code == undefined || this.code == null || this.code.toString() == \"\" || this.name == \"\") {\n        this.contentError = true;\n      } else {\n        this.service.AddFaculty({\n          facultyName: this.name,\n          facultyCode: parseInt(this.code.toString())\n        }).subscribe(() => {\n          this.clear();\n        });\n        global.hideform();\n      }\n    }\n\n    cancel() {\n      this.clear();\n      global.hideform();\n    }\n\n    clear() {\n      this.name = \"\";\n      this.code = undefined;\n    }\n\n  }\n\n  FacultyFormComponent.ɵfac = function FacultyFormComponent_Factory(t) {\n    return new (t || FacultyFormComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  FacultyFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FacultyFormComponent,\n    selectors: [[\"faculty-form\"]],\n    features: [i0.ɵɵProvidersFeature([DataService])],\n    decls: 4,\n    vars: 2,\n    consts: [[\"type\", \"text\", \"placeholder\", \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0444\\u0430\\u043A\\u0443\\u043B\\u044C\\u0442\\u0435\\u0442\\u0430\", 1, \"form-control\", 2, \"display\", \"inline-block\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"\\u041A\\u043E\\u0434 \\u0444\\u0430\\u043A\\u0443\\u043B\\u044C\\u0442\\u0435\\u0442\\u0430\", 1, \"form-control\", 2, \"display\", \"inline-block\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\", 3, \"click\"], [\"type\", \"button\", \"value\", \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\", 3, \"click\"]],\n    template: function FacultyFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function FacultyFormComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function FacultyFormComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.code = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"click\", function FacultyFormComponent_Template_input_click_2_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵlistener(\"click\", function FacultyFormComponent_Template_input_click_3_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.code);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"h2[_ngcontent-%COMP%]{font-family:Verdana;font-size:24px;color:green;width:50%;margin:0 auto}table[_ngcontent-%COMP%]{width:50%}th[_ngcontent-%COMP%]{font:bold}\"]\n  });\n  return FacultyFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}