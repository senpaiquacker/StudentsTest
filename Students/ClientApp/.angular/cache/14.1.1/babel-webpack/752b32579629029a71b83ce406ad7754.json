{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component, ElementRef } from '@angular/core';\nimport { DataService } from './app.dataservice';\nimport { FacultyGroup } from './faculty-group';\nlet GroupComponent = class GroupComponent {\n  constructor(service, elRef) {\n    this.service = service;\n    this.elRef = elRef;\n    this.edited = undefined;\n    this.editedId = undefined;\n    this.mode = Mode.Nothing;\n    this.contentError = false;\n    this.elRef = elRef;\n  }\n\n  ngOnInit() {\n    this.loadGroups();\n    this.loadFaculties();\n  }\n\n  addGroup() {\n    this.groups.push(new FacultyGroup(null, null));\n    this.selectGroup(this.groups.length - 1);\n    this.selectGroup(this.groups.length - 1);\n    this.mode = Mode.Create;\n  }\n\n  selectGroup(id) {\n    if (this.mode == Mode.Nothing) {\n      if (this.editedId == id) {\n        this.edit(id);\n      } else {\n        this.editedId = id;\n      }\n    }\n  }\n\n  edit(id) {\n    this.editable[id] = true;\n    this.loadFaculties();\n    this.edited = new FacultyGroup(this.groups[id].group, this.groups[id].facultyCodeId);\n    this.mode = Mode.Edit;\n  }\n\n  deleteGroup(id) {\n    this.clearSelection();\n    this.service.RemoveGroup(this.groups[id]).subscribe(() => {});\n    this.contentError = false;\n  }\n\n  save() {\n    if (this.edited.group == undefined || this.edited.group == null || this.edited.group.toString() == \"\" || this.edited.facultyCodeId == undefined) {\n      this.contentError = true;\n    } else {\n      this.contentError = false;\n      this.edited.group = parseInt(this.edited.group.toString(), 10);\n      this.edited.facultyCodeId = parseInt(this.edited.facultyCodeId.toString(), 10);\n\n      if (this.mode == Mode.Create) {\n        this.service.AddGroup(this.edited).subscribe(data => {});\n      } else if (this.mode == Mode.Edit) {\n        this.service.ModifyGroup(this.edited, this.groups[this.editedId]).subscribe(() => {});\n      }\n\n      this.groups[this.editedId] = this.edited;\n      this.clearSelection();\n    }\n  }\n\n  clearSelection() {\n    this.editable[this.editedId] = false;\n    this.editedId = undefined;\n    this.edited = undefined;\n    this.mode = Mode.Nothing;\n  }\n\n  loadGroups() {\n    this.service.GetGroups().subscribe(data => {\n      this.groups = data;\n      this.editable = Array.from(this.groups, n => false);\n      console.log(this.groups);\n      return this.groups;\n    });\n  }\n\n  getFacultyName(id) {\n    return this.faculties.find(s => s.facultyCode == id).facultyName;\n  }\n\n  loadFaculties() {\n    return this.service.GetFaculties().subscribe(s => {\n      this.faculties = s;\n    });\n  }\n\n};\nGroupComponent = __decorate([Component({\n  selector: 'groups',\n  templateUrl: './group.component.page.html',\n  providers: [DataService],\n  styleUrls: ['./app.component.style.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof DataService !== \"undefined\" && DataService) === \"function\" ? _a : Object, ElementRef])], GroupComponent);\nexport { GroupComponent };\nvar Mode = /*#__PURE__*/(() => {\n  (function (Mode) {\n    Mode[Mode[\"Nothing\"] = 0] = \"Nothing\";\n    Mode[Mode[\"Edit\"] = 1] = \"Edit\";\n    Mode[Mode[\"Create\"] = 2] = \"Create\";\n  })(Mode || (Mode = {}));\n\n  return Mode;\n})();","map":null,"metadata":{},"sourceType":"module"}